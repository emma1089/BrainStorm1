public int longestConsecutive(int[] nums) {
		Set<Integer> set = new HashSet<>();
		for(int num : nums)	set.add(num);
		int res = 0;
		for(int i = 0; i < nums.length; i++) {
				res = Math.max(res, getLeft(set, nums[i] - 1) + 1 + getRight(set, nums[i] + 1));
		}
		return res;
}
private int getLeft(Set<Integer> set, int num)	{
		int count = 0;
		while(set.contains(num)) {
				count++;
				set.remove(num);
				num--;
		}
		return count;
}
private int getRight(Set<Integer> set, int num)	{
		int count = 0;
		while(set.contains(num)) {
				count++;
				set.remove(num);
				num++;
		}
		return count;
}
