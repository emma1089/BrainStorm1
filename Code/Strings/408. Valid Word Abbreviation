Given a non-empty string s and an abbreviation abbr, return whether the string matches with the given abbreviation.

A string such as "word" contains only the following valid abbreviations:

["word", "1ord", "w1rd", "wo1d", "wor1", "2rd", "w2d", "wo2", "1o1d", "1or1", "w1r1", "1o2", "2r1", "3d", "w3", "4"]
Notice that only the above abbreviations are valid abbreviations of the string "word". Any other string is not a valid abbreviation of "word".

Note:
Assume s contains only lowercase letters and abbr contains only lowercase letters and digits.

Example 1:
Given s = "internationalization", abbr = "i12iz4n":

Return true.
Example 2:
Given s = "apple", abbr = "a2e":

Return false.

public boolean validWordAbbreviation(String word, String abbr) {
		int curA = 0, curB;
		int curNumber = 0;
		for(curB = 0; curB < abbr.length(); curB++) {
				if(curA >= word.length()) return false;
				if(!Character.isDigit(abbr.charAt(curB))) {
						if(word.charAt(curA) == abbr.charAt(curB)) {
								curA++;
								continue;
						} else {
								return false;
						}
				} else {
						curNumber = curNumber * 10 + (abbr.charAt(curB) - '0');
						//Avoid test case: "hi" "h01" and "a" "01"(哪个傻逼想出来的test case)
						if(curNumber == 0) return false;
						if(curB < abbr.length() - 1 && !Character.isDigit(abbr.charAt(curB + 1))) {
								curA += curNumber;
								curNumber = 0;
						}
				}
		}
		return curA + curNumber == word.length();
}
